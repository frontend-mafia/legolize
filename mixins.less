//********************************************
//	Global mixins
//********************************************/

// Naming convention
// Use camelCase for naming methods and -- for modifiers
// Custom methods: 	.myCustomMethod()
// CSS methods:  	.borderRadius--top()

// -------------------- Custom methods --------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
.clearfix () {
	&:before,
	&:after {
		content: " "; /* 1 */
		display: table; /* 2 */
	}
	&:after {
		clear: both;
	}
}

// -------------------- CSS methods --------------------
// ----- Opacity
.opacity (@opacity) {
	opacity: @opacity;
	// IE8 filter
	@opacity-ie: (@opacity * 100);
	filter: ~"alpha(opacity=@{opacity-ie})";
}

// ----- Border radius
.borderRadius(@radius) {
	-webkit-border-radius: @radius;
	   -moz-border-radius: @radius;
	        border-radius: @radius;
}

.borderRadius--top (@radius) {
	border-top-right-radius: @radius;
	border-top-left-radius: @radius;
}

.borderRadius--bottom (@radius) {
	border-bottom-right-radius: @radius;
	border-bottom-left-radius: @radius;
}

.borderRadius--right (@radius) {
	border-bottom-right-radius: @radius;
	border-top-right-radius: @radius;
}

.borderRadius--left (@radius) {
	border-bottom-left-radius: @radius;
	border-top-left-radius: @radius;
}

.userSelect(@argument: none) {
	-webkit-user-select: @argument;
	   -moz-user-select: @argument;
	    -ms-user-select: @argument;
	        user-select: @argument;
}

.boxSizing(@sizing: border-box) {
	-webkit-box-sizing: @sizing;
	   -moz-box-sizing: @sizing;
	    -ms-box-sizing: @sizing;
	        box-sizing: @sizing;
}

.boxShadow(@arguments) {
	-webkit-box-shadow: @arguments;
	   -moz-box-shadow: @arguments;
	        box-shadow: @arguments;
}

.transition (@transition) {
	-webkit-transition: @transition;  
	   -moz-transition: @transition;
		-ms-transition: @transition;
		 -o-transition: @transition;
			transition: @transition;
}

.transform (@transform) {
	-webkit-transform: @transform;
	   -moz-transform: @transform;
		-ms-transform: @transform;
		 -o-transform: @transform;
			transform: @transform;
}

.gradient (@startColor: #eee, @endColor: white) {
	background-color: @startColor;
	background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
	background: -webkit-linear-gradient(top, @startColor, @endColor);
	background: -moz-linear-gradient(top, @startColor, @endColor);
	background: -ms-linear-gradient(top, @startColor, @endColor);
	background: -o-linear-gradient(top, @startColor, @endColor);
}

.placeholderColor(@color) {
	&::-webkit-input-placeholder {
		color: @color;
	}
	&::-moz-placeholder {
		color: @color;
	}
}

//IE6 & 7 support for inline-block
.inline-block(){
  display: inline-block;
  zoom: 1;
  *display: inline;
}